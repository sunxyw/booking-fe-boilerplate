name: Build Reusable

on:
  workflow_call:
    inputs:
      afterBuild:
        required: false
        description: 'additional steps to run'
        type: string
      uploadAnalyzerArtifacts:
        required: false
        description: 'whether to upload analyzer artifacts'
        type: string
      nodeVersion:
        required: false
        description: 'version of Node.js to use'
        type: string
      stepName:
        required: true
        description: 'name of the step, to be used for the upload artifact unique key '
        type: string
      timeoutMinutes:
        description: 'Timeout in minutes'
        required: false
        type: number
        default: 30

env:
  NODE_LTS_VERSION: 20.9.0

  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build:
    timeout-minutes: ${{ inputs.timeoutMinutes }}
    runs-on: ubuntu-latest

    outputs:
      input_step_key: ${{ steps.var.outputs.input_step_key }}

    steps:
      - name: Normalize input step names into path key
        uses: actions/github-script@v7
        id: var
        with:
          script: |
            core.setOutput('input_step_key', '${{ inputs.stepName }}'.toLowerCase().replaceAll(/[/.]/g, '-').trim('-'));

      - name: Setup Node.js (${{ inputs.nodeVersion || env.NODE_LTS_VERSION }})
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion || env.NODE_LTS_VERSION }}
          check-latest: true
      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-

      - run: node -v
      - run: corepack enable
      - run: pwd

      - run: rm -rf .git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - run: pnpm install
      - run: npm audit signatures # pnpm do not support audit signatures yet

      - run: pnpm build-stats
        if: ${{ inputs.uploadAnalyzerArtifacts == 'yes' }}

      - run: /bin/bash -c "${{ inputs.afterBuild }}"
        timeout-minutes: ${{ inputs.timeoutMinutes }}

      - name: Upload bundle analyzer artifacts
        uses: actions/upload-artifact@v4
        if: ${{ inputs.uploadAnalyzerArtifacts == 'yes' }}
        with:
          name: webpack bundle analysis stats-${{ steps.var.outputs.input_step_key }}
          path: packages/next/dist/compiled/next-server/report.*.html
